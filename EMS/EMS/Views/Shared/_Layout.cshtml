@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@using EMS.UserInfoModelView
@inject IUserProfileService UserProfileService

@{
    var name = User.Identity.Name;
    var userPhotoUrl = await UserProfileService.GetUserPhotoUrlAsync();
    var UserFullName = await UserProfileService.GetUserNameAsync();
}

@inject Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper HtmlHelper
@{
    var currentController = ViewContext.RouteData.Values["Controller"]?.ToString();
    var currentAction = ViewContext.RouteData.Values["Action"]?.ToString();
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - EMS</title>

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/EMS.styles.css" asp-append-version="true" />

    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

    <style>
        .sidebar {
            width: 220px;
            background: linear-gradient(135deg, #1e1e2f, #34344a);
            color: #f8f9fa;
            position: fixed;
            height: 100vh;
            display: flex;
            flex-direction: column;
            transition: width 0.3s ease;
            overflow: hidden;
        }

            .sidebar.collapsed {
                width: 80px;
            }

        .toggle-btn {
            padding: 15px;
            cursor: pointer;
            background-color: #111122;
        }

        .profile {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 80px;
            background-color: #111122;
        }

        .profile-img {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            object-fit: cover;
            border: 2px solid #fff;
        }

        .profile-info {
            display: flex;
            flex-direction: column;
            text-align: center;
            padding: 3px;
        }

        .sidebar.collapsed .profile-info {
            display: none;
        }

        .menu {
            list-style: none;
            margin: 0;
            padding: 0;
            max-height: 360px;
            max-width: 400px;
            overflow: auto;
        }


        .menu-item {
            width: 100%;
        }

            /* -------- MENU ITEM START -------- */
            .menu-item a {
                display: flex;
                align-items: center;
                justify-content: flex-start; /* Left aligned! */
                gap: 12px; /* Space between icon and text */
                color: #ccc;
                padding: 15px 20px;
                text-decoration: none;
                transition: all 0.3s ease;
                font-weight: 500;
                text-align: left;
                width: 100%;
            }

                .menu-item a i {
                    font-size: 18px;
                    min-width: 20px; /* Keeps icons aligned */
                }

                .menu-item a:hover,
                .menu-item a.active {
                    background-color: #4c4c6a;
                    color: #fff;
                }

        .sidebar.collapsed .menu-item a {
            justify-content: center;
            gap: 0; /* Remove spacing when collapsed */
        }

            .sidebar.collapsed .menu-item a .link-text,
            .sidebar.collapsed .chevron-icon {
                display: none;
            }

        /* -------- MENU ITEM END -------- */

        /* -------- SUBMENU START -------- */
        .submenu {
            list-style: none;
            padding-left: 0;
            display: none;
            flex-direction: column;
            background-color: #2c2c3a;
            transition: all 0.3s ease;
            overflow: hidden;
        }

            .submenu.show {
                display: flex;
            }

            .submenu li a {
                padding: 12px 40px;
                color: #bbb;
                display: flex;
                align-items: center;
                justify-content: flex-start; /* Ensure left alignment */
                gap: 10px; /* Space between icon and text */
                transition: background 0.3s;
            }

                .submenu li a:hover,
                .submenu li a.active {
                    background-color: #505073;
                    color: #fff;
                }

        /* ✅ Collapsed Mode Submenu: Only show icons */
        .sidebar.collapsed .submenu li a {
            justify-content: center;
            padding: 12px 0;
        }

            .sidebar.collapsed .submenu li a .link-text,
            .sidebar.collapsed .submenu li a span {
                display: none;
            }

        /* -------- SUBMENU END -------- */

        .chevron-icon {
            margin-left: auto; /* Push chevron icon to the right */
            transition: transform 0.3s ease;
        }

            .chevron-icon.rotate {
                transform: rotate(180deg);
            }

        .logout-section {
            margin-top: auto;
            padding: 15px;
        }

        .logout-btn {
            display: flex;
            align-items: center;
            justify-content: flex-start; /* Left aligned */
            gap: 12px; /* Space between icon and text */
            color: #ccc;
            background: none;
            border: none;
            width: 100%;
            padding: 10px 20px;
            text-align: left;
            cursor: pointer;
            text-decoration: none;
        }

            .logout-btn:hover {
                background-color: #4c4c6a;
                color: #fff;
            }

        .sidebar.collapsed .logout-btn {
            justify-content: center;
            gap: 0;
        }

        .sidebar.collapsed .logout-btn span {
            display: none;
        }
           

        .main-content {
            margin-left: 220px;
            transition: margin-left 0.3s ease;
        }

            .main-content.collapsed {
                margin-left: 80px;
            }
    </style>


</head>
<body>

    <!-- Sidebar Start -->
    <div class="sidebar" id="sidebar">

        <!-- Toggle Button -->
        <div class="toggle-btn text-center" onclick="toggleSidebar()">
            <i class="bi bi-list"></i>
        </div>

        <!-- Profile Section -->
        <div class="profile">
            <img src="~/images/@userPhotoUrl" alt="Photo" class="profile-img" />
        </div>

        <div class="profile-info">
            <span>@(UserFullName != null ? UserFullName : "Guest")</span>
        </div>

        <!-- Menu Links Start -->
        <ul class="menu">

            @if (User.IsInRole("System"))
            {
                <li class="menu-item">
                    <a asp-controller="Home" asp-action="Index"
                       class="@(currentController == "Home" && currentAction == "Index" ? "active" : "")">
                        <i class="bi bi-house-door"></i>
                        <span class="link-text">Home</span>
                    </a>
                </li>

                <li class="menu-item has-submenu @(currentController == "Trainingvideos" || currentController == "AudioSetup" || currentController == "RoleSetup" ? "active" : "")">
                    <a href="#" class="submenu-toggle" onclick="toggleSubMenu(event)">
                        <i class="bi bi-gear"></i>
                        <span class="link-text">Setup</span>
                        <i class="bi bi-chevron-down chevron-icon @(currentController == "Trainingvideos" || currentController == "AudioSetup" || currentController == "RoleSetup" ? "rotate" : "")"></i>
                    </a>

                    <ul class="submenu @(currentController == "Trainingvideos" || currentController == "AudioSetup" || currentController == "RoleSetup" ? "show" : "")" id="setupSubMenu">
                        <li>
                            <a asp-controller="Trainingvideos" asp-action="Index"
                               class="@(currentController == "Trainingvideos" && currentAction == "Index" ? "active" : "")">
                                <i class="bi bi-camera-video"></i> Video Setup
                            </a>
                        </li>
                        <li>
                            <a asp-controller="AudioSetup" asp-action="Index"
                               class="@(currentController == "AudioSetup" && currentAction == "Index" ? "active" : "")">
                                <i class="bi bi-mic"></i> Audio Setup
                            </a>
                        </li>
                        <li>
                            <a asp-controller="RoleSetup" asp-action="Index"
                               class="@(currentController == "RoleSetup" && currentAction == "Index" ? "active" : "")">
                                <i class="bi bi-person-gear"></i> Role Setup
                            </a>
                        </li>
                         <li>
                            <a asp-controller="RoleSetup" asp-action="Index"
                               class="@(currentController == "RoleSetup" && currentAction == "Index" ? "active" : "")">
                                <i class="bi bi-person-gear"></i> Role Setup
                            </a>
                        </li>
                         <li>
                            <a asp-controller="RoleSetup" asp-action="Index"
                               class="@(currentController == "RoleSetup" && currentAction == "Index" ? "active" : "")">
                                <i class="bi bi-person-gear"></i> Role Setup
                            </a>
                        </li>


                    </ul>
                </li>





             <li class="menu-item">
                 <a asp-controller="Videos" asp-action="Videos"
                    class="@(currentController == "Videos" && currentAction == "Videos" ? "active" : "")">
                     <i class="bi bi-camera-video"></i>
                     <span class="link-text">Videos</span>
                 </a>
             </li>




            }
        </ul>




        <!-- Logout Section -->
        <div class="logout-section">
            @if (SignInManager.IsSignedIn(User))
            {
                <form asp-area="Identity" asp-page="/Account/Logout" method="post"
                      asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="logout-btn">
                        <i class="bi bi-box-arrow-right"></i>
                        <span>Logout</span>
                    </button>
                </form>
            }
            else
            {
                <a asp-area="Identity" asp-page="/Account/Login"
                   asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })"
                   class="logout-btn">
                    <i class="bi bi-box-arrow-in-right"></i>
                    <span>Login</span>
                </a>
            }
        </div>
    </div>
    <!-- Sidebar End -->
    <!-- Main Content Start -->
    <div class="main-content flex-grow-1 p-4" id="mainContent">
        <main role="main">
            @RenderBody()
        </main>
    </div>
    <!-- Main Content End -->
    <!-- Scripts -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
        function toggleSidebar() {
            const sidebar = document.getElementById('sidebar');
            const mainContent = document.getElementById('mainContent');

            sidebar.classList.toggle('collapsed');
            mainContent.classList.toggle('collapsed');

            if (sidebar.classList.contains('collapsed')) {
                document.querySelectorAll('.submenu').forEach(submenu => {
                    submenu.classList.remove('show');
                });
                document.querySelectorAll('.chevron-icon').forEach(icon => {
                    icon.classList.remove('rotate');
                });
            }
        }

        function toggleSubMenu(event) {
            event.preventDefault();

            const parent = event.currentTarget.closest('.menu-item');
            const submenu = parent.querySelector('.submenu');
            const chevron = parent.querySelector('.chevron-icon');

            // Collapse all others
            document.querySelectorAll('.submenu').forEach(otherSubmenu => {
                if (otherSubmenu !== submenu) {
                    otherSubmenu.classList.remove('show');
                }
            });
            document.querySelectorAll('.chevron-icon').forEach(otherChevron => {
                if (otherChevron !== chevron) {
                    otherChevron.classList.remove('rotate');
                }
            });

            submenu.classList.toggle('show');
            chevron.classList.toggle('rotate');
        }
    </script>

    @await RenderSectionAsync("Scripts", required: false)

</body>
</html>
