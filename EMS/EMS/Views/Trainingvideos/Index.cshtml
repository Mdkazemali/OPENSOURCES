@model IEnumerable<EMS.Models.d>

@{
    ViewData["Title"] = "Index";
}
@{
    var LeaveCount = Model.Count();
}
<style>
    .table {
        border: black;
    }
</style>

@{
    var page = ViewData["Page"] != null ? (int)ViewData["Page"] : 1;
    var pageSize = ViewData["PageSize"] != null ? (int)ViewData["PageSize"] : 50;
    var totalPages = ViewData["TotalPages"] != null ? (int)ViewData["TotalPages"] : 1;
    var totalRecords = ViewData["TotalRecords"] != null ? (int)ViewData["TotalRecords"] : 0;
}

<h5 class="header_content"> &nbsp; <b>No.of Training Videw</b> :<b class="header_content"> @LeaveCount </b> </h5>
@using (Html.BeginForm("Index", "Trainingvideos", FormMethod.Get))
{

    <div class="form-group">


        <input type="search" placeholder="Search your content.." value="@ViewData["videoname"]" name="videoname" style="width: 350px;height:33px; border:2px solid #055160; " />


        <input type="submit" value="Search" class="btn btn-primary" />
        <a asp-action="Create" class="btn btn-primary">Create New</a>
        @((page - 1) * pageSize + 1)-
        <input type="search" name="pp" value="@ViewData["pp"]" placeholder="PageSize" style="width: 65px;height:33px; border:2px solid #055160;" /> of @totalRecords


    </div>



}


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    // get a reference to the search input field
    const searchBox = $('#searchBox');

    // listen for changes in the search input field
    searchBox.on('input', function () {
        const query = searchBox.val();
        // make an asynchronous HTTP GET request to the server
        $.ajax({
            url: `/search?query=${query}`,
            type: 'GET',
            success: function (data) {
                // update the page with the search results
                $('#searchResults').html(data);
            },
            error: function (xhr, status, error) {
                console.error(error);
            }
        });
    });
</script>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>
                ভিডিও নাম
            </th>
            <th>
                ভিডিও আইডি 
            </th>
            <th>
                তারিখ
            </th>
            <th>
                 ইউজার
            </th>
            <th class="edit_del">
                Edit/Delete
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.VideoName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.videoLink)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreateDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Username)
            </td>
            <td>
                <a asp-action="Edit" class="btn btn-primary" asp-route-id="@item.vdoId">Edit</a>
                @*  <a asp-action="Details" class="btn btn-primary" asp-route-id="@item.vdoId">Details</a> *@
                 <a asp-action="Delete" class="btn btn-primary" asp-route-id="@item.vdoId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>


